apiVersion: agones.dev/v1
kind: Fleet

metadata:
  name: {{ .Values.name }}
  namespace: emortalmc

spec:
  scheduling: Distributed

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  allocationOverflow:
    labels:
      emortal.dev/outdated: "true"

  template:
    spec:
      counters:
        players:
          count: 0
          {{- if .Values.players.capacity }}
          capacity: {{ .Values.players.capacity }}
          {{- end }}

      lists:
        players:
          values: []
          {{- if .Values.players.capacity }}
          capacity: {{ .Values.players.capacity }}
          {{- end }}

      ports:
        - name: default
          portPolicy: Dynamic
          containerPort: 25565
          protocol: TCP

      health:
        initialDelaySeconds: 5
        periodSeconds: 15
        failureThreshold: 2

      template:
        metadata:
          labels:
            emortal.dev/mc-metrics-enabled: "true"
        spec:
          serviceAccountName: default-gameserver
          automountServiceAccountToken: true

          volumes:
            - name: crash-reports
              persistentVolumeClaim:
                claimName: mc-crash-reports

          containers:
            - name: {{ .Values.name }}
              image: {{ printf .Values.image.format (default .Values.name .Values.image.name) .Values.version }}

              command: [ "java" ]
              args: [
                "-XX:+UseZGC",
                "-Xlog:jni+resolve=off", # This is a workaround to stop the JNI warning for Unsafe.park being registered multiple times - caused by Pyroscope.
                "-Xmx{{ .Values.memory.max }}",
                "-Xms{{ .Values.memory.min }}",
                "-Dlogback.configurationFile=logback-prod.xml",
                # Start of crash reporting
                "-XX:ErrorFile=/app/crash_reports/hs_err_pid%p.log",
                "-XX:+HeapDumpOnOutOfMemoryError",
                "-XX:HeapDumpPath=/app/crash_reports/",
                # End of crash reporting
                "-jar",
                "/app/{{ default (printf "%s.jar" .Values.name) .Values.jarName }}"
              ]

              resources:
              {{- with .Values.resources }}
                {{- toYaml . | nindent 16 }}
              {{- end }}

              ports:
                - name: metrics
                  containerPort: 8081
                  protocol: TCP

              env:
                - name: VELOCITY_FORWARDING_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: velocity-forwarding-token
                      key: forwarding.secret
                      optional: false
                - name: KAFKA_HOST
                  value: default-kafka-bootstrap
                - name: KAFKA_PORT
                  value: "9092"
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: FLEET_NAME
                  value: {{ .Values.name }}
                - name: PYROSCOPE_ADDRESS
                  valueFrom:
                    configMapKeyRef:
                      name: pyroscope
                      key: address

              volumeMounts:
                - mountPath: /app/crash_reports
                  name: crash-reports

